#ADDD 30S SEC SLEEP PER

import time
from picamera import PiCamera


orbit_number = 0
orbit_type = 10  #high resolution

picture_number = 0

def picture_loop(length, width, type):
  for picture_number in range(5):
    print("instantiate")
    camera = PiCamera()
    print("instantiate 2")
    print(camera.revision)
    camera.resolution= (length, width)
    camera.vflip = True
    camera.contrast = 10
    file_name= ('/home/pi/Pictures/test2' +str(orbit_number)+'_'+type+ '.jpg')
    camera.capture(file_name)
    camera.close()
    print("File"+file_name)
    print("Done.")
    time.sleep(5)
    picture_number += 1


for orbit_number in range(11):
    #orbit_type = 10  # "high resolution"
  print(orbit_type)
  if orbit_number % 2 == 0: #orbit number is even
    # #toggle orbit type
    if orbit_type== 10:
      orbit_type = 0 #switch it
      print("Taking LOW resolution picture")
      picture_loop(1280, 720,'LOW')
      time.sleep(1)
    else:
      orbit_type = 10 #switch it
      #Monitor the cubesat’s current latitude/longitude coordinates 
      #When the current coordinates is a member of the list of lat/long coordinates received from gro>
      #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 1920 -h 1080
      print("Taking HIGH resolution picture")
      picture_loop(1920, 1080,'HIGH')
      time.sleep(1)
  else: #orbit number is odd
    #consider what orbit_type is currently equal to.
    if orbit_type == 0:
      #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 720 -h 480
      print("Taking LOW resolution picture")
      picture_loop(1280, 720,'LOW')
      time.sleep(1)
    else: #If (orbit_type == high resolution):
      #Monitor the cubesat’s current latitude/longitude coordinates
      #When the current coordinates is a member of the list of lat/long coordinates received from gro>
      #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 1920 -h 1080
      print("print HIGH resolution picture")
      picture_loop(1920, 1080,'HIGH')
      time.sleep(1)
  print("Orbit number "+str(orbit_number))
  orbit_number += 1



'''
import time
from picamera import PiCamera


orbit_number = 0
orbit_type = 10  #high resolution


picture_number = 0

def picture_loop (length, width, type):
  for picture_number in range (5):
    print("instantiate")
    camera = PiCamera()
    print("instantiate 2")
    print(camera.revision)
    camera.resolution= (length, width)
    camera.vflip = True
    camera.contrast = 10
    file_name= ('/home/pi/Pictures/test2' +str(orbit_number)+'_'+type+ '.jpg')
    camera.capture(file_name)
    camera.close()
    print ("File"+file_name)
    print ("Done.")
    time.sleep (5)
    picture_number +=


for orbit_number in range(11):
    #orbit_type = 10  # "high resolution"
  print(orbit_type)
  if orbit_number % 2 == 0: #orbit number is even
    # #toggle orbit type
    if orbit_type== 10:
      orbit_type = 0 #switch it
      print ("Taking LOW resolution picture")
      picture_loop(1280, 720,'LOW')
      time.sleep(1)
    else:
      orbit_type = 10 #switch it
      #Monitor the cubesat’s current latitude/longitude coordinates 
      #When the current coordinates is a member of the list of lat/long coordinates received from ground station
      #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 1920 -h 1080
      print ("Taking HIGH resolution picture")
      picture_loop(1920, 1080,'HIGH')
      time.sleep(1)
  else: #orbit number is odd
    #consider what orbit_type is currently equal to.
    if orbit_type == 0:
      #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 720 -h 480
      print ("Taking LOW resolution picture")
      picture_loop(1280, 720,'LOW')
      time.sleep(1)
    else: #If (orbit_type == high resolution):
      #Monitor the cubesat’s current latitude/longitude coordinates
      #When the current coordinates is a member of the list of lat/long coordinates received from ground station,
      #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 1920 -h 1080
      print ("print HIGH resolution picture")
      picture_loop(1920, 1080,'HIGH')
      time.sleep(1)
  print ("Orbit number "+str(orbit_number))
  orbit_number +=




'''
'''
import time
from picamera import PiCamera

orbit_number = 0
orbit_type = 10  #high resolution

def take_picture (length, width):
    camera = PiCamera()
    camera.resolution= (length, width)
    camera.vflip = True
    camera.contrast = 10
    time.sleep(2)
    #file_name = "/Downloads/picamera-1.13/picamera/" + str(orbit_number) + str(time.time()) + ".j>
    file_name= ('/home/pi/Pictures/%s%s.jpg' % (orbit_number, orbit_type))
    camera.capture(file_name)
    print ("Done.")

for orbit_number in range(11):
    #orbit_type = 10  # "high resolution"
    print(orbit_type)
    if orbit_number % 2 == 0: #orbit number is even
        # #toggle orbit type
        if orbit_type== 10:
            orbit_type = 0 #switch it
            print ("Taking LOW resolution picture")
            take_picture(1280, 720)
        else:
            orbit_type = 10 #switch it
         #Monitor the cubesat’s current latitude/longitude coordinates
         #When the current coordinates is a member of the list of lat/long coordinates received fr>
         #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 1920 -h 1080
            print ("Taking HIGH resolution picture")
            take_picture(1920, 1080)

    else: #orbit number is odd
      #consider what orbit_type is currently equal to.
        if orbit_type == 0:
         #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 720 -h 480
            print ("Taking LOW resolution picture")
            take_picture(1280, 720)
        else: #If (orbit_type == high resolution):
         #Monitor the cubesat’s current latitude/longitude coordinates
         #When the current coordinates is a member of the list of lat/long coordinates received fr>
         #**raspistill -t 30000 -tl 2000 -o image%04d.jpg -w 1920 -h 1080
            print ("print HIGH resolution picture")
            take_picture(1920, 1080)

    orbit_number = orbit_number +1
'''
